generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int      @id @default(autoincrement())
    fullName  String
    email     String   @unique
    password  String
    role UserRole @default(USER)
    verified Boolean @default(false)

    provider String?
    providerId String?

    cart      Cart?
    orders Order[]
    verificationCode VerificationCode?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Category {
    id       Int       @id @default(autoincrement())
    name     String    @unique
    products Product[]
}

model Product {
    id        Int      @id @default(autoincrement())
    name      String
    imageUrl  String
    
    createdAt DateTime @default(now())
    updatedAt  DateTime @updatedAt

    ingredients Ingredient[] @relation

    category   Category @relation(fields: [categoryId], references: [id])
    categoryId Int

    productItems ProductItem[]
}

model ProductItem {
    id        Int  @id @default(autoincrement())
    price     Int
    size      Int?
    pizzaType Int?

    product   Product @relation(fields: [productId], references: [id])
    productId Int

    CartItem CartItem[]
}

model Ingredient {
    id        Int      @id @default(autoincrement())
    name      String   @unique
    price     Int
    imageUrl  String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    products   Product[] @relation
    cartItems   CartItem[]
}

model Cart {
    id Int @id @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId Int?  @unique

    token String

    totalAmount Int @default(0)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    cartItem CartItem[]
}

model CartItem {
    id Int @id @default(autoincrement())

    productItemId Int
    productItem   ProductItem @relation(fields: [productItemId], references: [id])

    cartId Int
    cart   Cart @relation(fields: [cartId], references: [id])

    quantity Int @default(1)

    additionalIngredients Ingredient[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Order {
    id Int @id @default(autoincrement())

    userId Int?
    user User? @relation(fields: [userId], references: [id])

    token String

    totalAmount Int 
    status OrderStatus
    paymentId String?

    items Json

    fullName String 
    address String 
    email String 
    phone String 
    comment String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model VerificationCode {
    id Int @id @default(autoincrement())

    userId Int @unique
    user User @relation(fields: [userId], references: [id])

    code String 

    createdAt DateTime @default(now())

    @@unique([userId, code])
}

enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}


enum UserRole {
    USER
    ADMIN
}